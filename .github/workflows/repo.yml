# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Setmore API Tests - Node.js CI

on:
  
  push:
    branches: [ master,cache-github-actions]
  pull_request:
    branches: [ master ]
    types: [opened]
  schedule:
    - cron: '0 09 * * *'

jobs:
  api-tests-sendmsg-on-every-pull-request:
   if: github.event_name == 'pull_request'
   runs-on : ubuntu-latest
   timeout-minutes: 1
   steps :
         - name: Check out repository
         - uses: actions/checkout@v2
           with:
            repository: Adaptavant/Setmore-Automation-WebApp
            token: 28e6e3ca516b8b7201401c0409b3f2124b12947e
            event-type: tests
            client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

                
                
  api-tests:
    runs-on : ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [14.x]
    defaults:
      run:
        shell: bash
        working-directory: setmore

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Execute the API Tests 
      run: rm -rf scratch/detailsRequire && DEBUG=mocha:* node_modules/.bin/mocha apiTest/*.js --timeout 70000  --reporter mocha-allure-reporter

    - name: Generate allure report and upload to secure server
      if: ${{ always() }}
      run: |
        # Generate allure report and upload to secure server
        ./node_modules/.bin/allure generate allure-results --clean -o allure-report
        chmod 400 .secrets/report.ssh
        
        if [ "${{github.event_name }}" == "schedule" ]; then
        sh uploadReportsToAw.sh
        
